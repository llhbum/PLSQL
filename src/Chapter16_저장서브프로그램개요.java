public class Chapter16_저장서브프로그램개요 {
    /*
    Chapter16_저장서브프로그램개요
        [개념]
            저장 서브프로그램은 데이터베이스 서버에 저장되며, 다른 사용자에 의해 호출하여 실행할 수 있으므로
            동일한 소스 코드를 여러 사용자가 공유할 수 있다.

        16.1 저장 서브프로그램을 사용하는 이유
            [장점]
                1. 재사용성
                2. 유지보수성
                3. 모듈화
                4. 표준화
                5. 성능

        16.2 저장 서브프로그램의 종류
            [종류]
                독립형 저장 서브프로그램
                    1. 함수 : 결과값을 반환하는 서브프로그램
                    2. 프로시저 : 결과겂을 반환하지 않는 서브프로그램
                3. 패키지 : 타입, 상수, 변수, 예외, 커서, 서브프로그램 등을 묶어서 모듈화한 저장 서브프로그램
                4. 트리거 : 특정 이벤트 발생 시 데이터베이스에 의해 자동적으로 호출되는 서브프로그램
                5. 객체 타입 : 관계형 DB에서 객체 지향 프로그래밍을 가능하게 하는 저장 서브프로그램.
                              ADT(Abstract Data Type) 또는 사용자 정의 타입이라고도 함

        16.3 프로그램을 서버에 저장하고 공유하기
            - 프로그래머는 함수, 프로시저와 같은 서브프로그램을 작성하여 데이터베이스 서버에 저장하기 위해 컴파일한다.
              컴파일된 서브프로그램은 데이터베이스의 서버의 딕셔너리에 이름과 함께 저장된다.
              서브프로그램이 데이터베이스 서버에 저장될 때에는 소스코드와 함께 컴파일된 실행 코드가 바이트코드 형태로 같이 저장되므로
              실행 시에는 컴파일 과정없이 빠르게 실행될 수 있다.

        16.5 서버에 저장되지 않는 서브프로그램
            1. 저장 서브프로그램 : 데이터베이스 서버에 저장되어 재사용이 가능한 서브프로그램
            2. 저장되지 않는 서브프로그램 : 데이터베이스에 저장되지 않는 익명 PL/SQL에 포함된 서브프로그램
     */
}
